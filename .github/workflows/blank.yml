# This workflow will build a MuleSoft project and deploy to CloudHub

name: Build and Deploy to Sandbox
env:
  applicationName: 'test-mule-3'
  artifactName: '' #test-mule-3-mule-application
  uri: 'https://anypoint.mulesoft.com/'
  applicationIdCloudhub: '' # Application id, can be found in the anypoint platform 17545841
  organizationId: '2ed587c4-ea36-44a8-9424-9a402da6979b' # OrganizationId
  environment: "Sandbox"
  region: eu-west-1
  noOfWorkers: 1
  workerType: micro
  muleAppVersion: '1.0.0' 
  environmentId: 'e682c973-f385-47db-a4cc-e820c0af6952' # https://anypoint.mulesoft.com/accounts/api/organizations/2ed587c4-ea36-44a8-9424-9a402da6979b/environments

on:
  push:
    branches: [ main ]
    
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-mvn-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-mvn-
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v2.x

      - name: Maven Settings
        env:
          MAVEN_SETTINGS_XML: ${{ secrets.MAVEN_MULESOFT_SETTINGS_XML }}
        run:
          echo $MAVEN_SETTINGS_XML | base64 -d > ${{ github.workspace }}/settings.xml

      - name: Update pom.xml Version
        run: mvn versions:set -DnewVersion=${{env.muleAppVersion}}

      - name: Build with Maven
        run:
          mvn -B package -s ${{ github.workspace }}/settings.xml

      - uses: actions/upload-artifact@v2
        with:
          name: ${{env.artifactName}}
          path: ${{ github.workspace }}/target/*mule-application*.jar
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@v2
      with:
        name: ${{env.artifactName}}
    - name: Deploy to CloudHub
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn package deploy -DmuleDeploy -Danypoint.url=${{env.uri}} -Danypoint.env=${{env.environment}} -Danypoint.appName=${{ env.applicationName }} -Danypoint.username=${{ secrets.ANYPOINT_USERNAME }} -Danypoint.password=${{ secrets.ANYPOINT_PASSWORD }}  -Danypoint.muleVersion=${{env.muleVersion}} -Danypoint.region=${{env.region}} -Danypoint.workers=${{env.noOfWorkers}} -Danypoint.workerType=${{env.workerType}}
